{
	"id": "134166c50a3d83378d0134a9ca2ded13",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/level3.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ninterface ICoinFlip{\r\n    function flip(bool _guess) external returns (bool);\r\n}\r\n\r\ncontract level3 {\r\n\r\n    ICoinFlip public surface;\r\n\r\n    using SafeMath for uint256;\r\n    uint256 public consecutiveWins;\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n    constructor(){\r\n        surface = ICoinFlip(0x96E35B7e384D933450272F1C7b34a169B0763b1C);\r\n    }\r\n\r\n\r\n    function win() external payable {\r\n        uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n\r\n        \r\n        uint256 coinFlip = blockValue.div(FACTOR);\r\n        bool side = coinFlip == 1 ? true : false;\r\n\r\n        surface.flip(side);\r\n    }\r\n\r\n    receive() external payable {}\r\n    \r\n\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/level3.sol": {
				"ICoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/level3.sol\":\"ICoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/level3.sol\":{\"keccak256\":\"0x2a60c70d8799426e9d897a85e108927551b4494a22871ea9cde2577840e55e3b\",\"urls\":[\"bzz-raw://bb242c49c4f1c5af8e5f946bae03712f93f92847513d0efac4c081216003227a\",\"dweb:/ipfs/Qmasx7TnyeovLt2MSzFUyJu9LLpTSH3AeKc5jLBn6ZD3RE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"level3": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "surface",
							"outputs": [
								{
									"internalType": "contract ICoinFlip",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "win",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/level3.sol\":171:814  contract level3 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/level3.sol\":316:393  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/level3.sol\":299:393  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/level3.sol\":402:497  constructor(){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/level3.sol\":446:488  0x96E35B7e384D933450272F1C7b34a169B0763b1C */\n  0x96e35b7e384d933450272f1c7b34a169b0763b1c\n    /* \"contracts/level3.sol\":426:433  surface */\n  0x00\n  dup1\n    /* \"contracts/level3.sol\":426:489  surface = ICoinFlip(0x96E35B7e384D933450272F1C7b34a169B0763b1C) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/level3.sol\":171:814  contract level3 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/level3.sol\":171:814  contract level3 {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0e94ba83\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x473ca96c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/level3.sol\":196:220  ICoinFlip public surface */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/level3.sol\":507:764  function win() external payable {\r... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/level3.sol\":262:292  uint256 public consecutiveWins */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/level3.sol\":196:220  ICoinFlip public surface */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/level3.sol\":507:764  function win() external payable {\r... */\n    tag_14:\n        /* \"contracts/level3.sol\":550:568  uint256 blockValue */\n      0x00\n        /* \"contracts/level3.sol\":589:608  block.number.sub(1) */\n      tag_21\n        /* \"contracts/level3.sol\":606:607  1 */\n      0x01\n        /* \"contracts/level3.sol\":589:601  block.number */\n      number\n        /* \"contracts/level3.sol\":589:605  block.number.sub */\n      tag_22\n      swap1\n        /* \"contracts/level3.sol\":589:608  block.number.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_21:\n        /* \"contracts/level3.sol\":579:609  blockhash(block.number.sub(1)) */\n      blockhash\n        /* \"contracts/level3.sol\":571:610  uint256(blockhash(block.number.sub(1))) */\n      0x00\n      shr\n        /* \"contracts/level3.sol\":550:610  uint256 blockValue = uint256(blockhash(block.number.sub(1))) */\n      swap1\n      pop\n        /* \"contracts/level3.sol\":633:649  uint256 coinFlip */\n      0x00\n        /* \"contracts/level3.sol\":652:674  blockValue.div(FACTOR) */\n      tag_23\n        /* \"contracts/level3.sol\":667:673  FACTOR */\n      sload(0x02)\n        /* \"contracts/level3.sol\":652:662  blockValue */\n      dup4\n        /* \"contracts/level3.sol\":652:666  blockValue.div */\n      tag_24\n      swap1\n        /* \"contracts/level3.sol\":652:674  blockValue.div(FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_23:\n        /* \"contracts/level3.sol\":633:674  uint256 coinFlip = blockValue.div(FACTOR) */\n      swap1\n      pop\n        /* \"contracts/level3.sol\":685:694  bool side */\n      0x00\n        /* \"contracts/level3.sol\":709:710  1 */\n      0x01\n        /* \"contracts/level3.sol\":697:705  coinFlip */\n      dup3\n        /* \"contracts/level3.sol\":697:710  coinFlip == 1 */\n      eq\n        /* \"contracts/level3.sol\":697:725  coinFlip == 1 ? true : false */\n      tag_25\n      jumpi\n        /* \"contracts/level3.sol\":720:725  false */\n      0x00\n        /* \"contracts/level3.sol\":697:725  coinFlip == 1 ? true : false */\n      jump(tag_26)\n    tag_25:\n        /* \"contracts/level3.sol\":713:717  true */\n      0x01\n        /* \"contracts/level3.sol\":697:725  coinFlip == 1 ? true : false */\n    tag_26:\n        /* \"contracts/level3.sol\":685:725  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/level3.sol\":738:745  surface */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/level3.sol\":738:750  surface.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/level3.sol\":751:755  side */\n      dup3\n        /* \"contracts/level3.sol\":738:756  surface.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      pop\n        /* \"contracts/level3.sol\":539:764  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/level3.sol\":507:764  function win() external payable {\r... */\n      jump\t// out\n        /* \"contracts/level3.sol\":262:292  uint256 public consecutiveWins */\n    tag_17:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_41:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_43\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:495   */\n    tag_33:\n        /* \"#utility.yul\":217:223   */\n      0x00\n        /* \"#utility.yul\":266:268   */\n      0x20\n        /* \"#utility.yul\":254:263   */\n      dup3\n        /* \"#utility.yul\":245:252   */\n      dup5\n        /* \"#utility.yul\":241:264   */\n      sub\n        /* \"#utility.yul\":237:269   */\n      slt\n        /* \"#utility.yul\":234:353   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":272:351   */\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":234:353   */\n    tag_46:\n        /* \"#utility.yul\":392:393   */\n      0x00\n        /* \"#utility.yul\":417:478   */\n      tag_49\n        /* \"#utility.yul\":470:477   */\n      dup5\n        /* \"#utility.yul\":461:467   */\n      dup3\n        /* \"#utility.yul\":450:459   */\n      dup6\n        /* \"#utility.yul\":446:468   */\n      add\n        /* \"#utility.yul\":417:478   */\n      tag_41\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":407:478   */\n      swap2\n      pop\n        /* \"#utility.yul\":363:488   */\n      pop\n        /* \"#utility.yul\":150:495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":501:610   */\n    tag_50:\n        /* \"#utility.yul\":582:603   */\n      tag_52\n        /* \"#utility.yul\":597:602   */\n      dup2\n        /* \"#utility.yul\":582:603   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":577:580   */\n      dup3\n        /* \"#utility.yul\":570:604   */\n      mstore\n        /* \"#utility.yul\":501:610   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:781   */\n    tag_54:\n        /* \"#utility.yul\":720:774   */\n      tag_56\n        /* \"#utility.yul\":768:773   */\n      dup2\n        /* \"#utility.yul\":720:774   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":715:718   */\n      dup3\n        /* \"#utility.yul\":708:775   */\n      mstore\n        /* \"#utility.yul\":616:781   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":787:905   */\n    tag_58:\n        /* \"#utility.yul\":874:898   */\n      tag_60\n        /* \"#utility.yul\":892:897   */\n      dup2\n        /* \"#utility.yul\":874:898   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":869:872   */\n      dup3\n        /* \"#utility.yul\":862:899   */\n      mstore\n        /* \"#utility.yul\":787:905   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":911:1121   */\n    tag_28:\n        /* \"#utility.yul\":998:1002   */\n      0x00\n        /* \"#utility.yul\":1036:1038   */\n      0x20\n        /* \"#utility.yul\":1025:1034   */\n      dup3\n        /* \"#utility.yul\":1021:1039   */\n      add\n        /* \"#utility.yul\":1013:1039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1049:1114   */\n      tag_63\n        /* \"#utility.yul\":1111:1112   */\n      0x00\n        /* \"#utility.yul\":1100:1109   */\n      dup4\n        /* \"#utility.yul\":1096:1113   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup5\n        /* \"#utility.yul\":1049:1114   */\n      tag_50\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":911:1121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1127:1383   */\n    tag_12:\n        /* \"#utility.yul\":1237:1241   */\n      0x00\n        /* \"#utility.yul\":1275:1277   */\n      0x20\n        /* \"#utility.yul\":1264:1273   */\n      dup3\n        /* \"#utility.yul\":1260:1278   */\n      add\n        /* \"#utility.yul\":1252:1278   */\n      swap1\n      pop\n        /* \"#utility.yul\":1288:1376   */\n      tag_65\n        /* \"#utility.yul\":1373:1374   */\n      0x00\n        /* \"#utility.yul\":1362:1371   */\n      dup4\n        /* \"#utility.yul\":1358:1375   */\n      add\n        /* \"#utility.yul\":1349:1355   */\n      dup5\n        /* \"#utility.yul\":1288:1376   */\n      tag_54\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1127:1383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1389:1611   */\n    tag_19:\n        /* \"#utility.yul\":1482:1486   */\n      0x00\n        /* \"#utility.yul\":1520:1522   */\n      0x20\n        /* \"#utility.yul\":1509:1518   */\n      dup3\n        /* \"#utility.yul\":1505:1523   */\n      add\n        /* \"#utility.yul\":1497:1523   */\n      swap1\n      pop\n        /* \"#utility.yul\":1533:1604   */\n      tag_67\n        /* \"#utility.yul\":1601:1602   */\n      0x00\n        /* \"#utility.yul\":1590:1599   */\n      dup4\n        /* \"#utility.yul\":1586:1603   */\n      add\n        /* \"#utility.yul\":1577:1583   */\n      dup5\n        /* \"#utility.yul\":1533:1604   */\n      tag_58\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1389:1611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1698:1883   */\n    tag_39:\n        /* \"#utility.yul\":1738:1739   */\n      0x00\n        /* \"#utility.yul\":1755:1775   */\n      tag_71\n        /* \"#utility.yul\":1773:1774   */\n      dup3\n        /* \"#utility.yul\":1755:1775   */\n      tag_61\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1750:1775   */\n      swap2\n      pop\n        /* \"#utility.yul\":1789:1809   */\n      tag_72\n        /* \"#utility.yul\":1807:1808   */\n      dup4\n        /* \"#utility.yul\":1789:1809   */\n      tag_61\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1784:1809   */\n      swap3\n      pop\n        /* \"#utility.yul\":1828:1829   */\n      dup3\n        /* \"#utility.yul\":1818:1853   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1833:1851   */\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1818:1853   */\n    tag_73:\n        /* \"#utility.yul\":1875:1876   */\n      dup3\n        /* \"#utility.yul\":1872:1873   */\n      dup3\n        /* \"#utility.yul\":1868:1877   */\n      div\n        /* \"#utility.yul\":1863:1877   */\n      swap1\n      pop\n        /* \"#utility.yul\":1698:1883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1889:2080   */\n    tag_36:\n        /* \"#utility.yul\":1929:1933   */\n      0x00\n        /* \"#utility.yul\":1949:1969   */\n      tag_77\n        /* \"#utility.yul\":1967:1968   */\n      dup3\n        /* \"#utility.yul\":1949:1969   */\n      tag_61\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1944:1969   */\n      swap2\n      pop\n        /* \"#utility.yul\":1983:2003   */\n      tag_78\n        /* \"#utility.yul\":2001:2002   */\n      dup4\n        /* \"#utility.yul\":1983:2003   */\n      tag_61\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1978:2003   */\n      swap3\n      pop\n        /* \"#utility.yul\":2022:2023   */\n      dup3\n        /* \"#utility.yul\":2019:2020   */\n      dup3\n        /* \"#utility.yul\":2016:2024   */\n      lt\n        /* \"#utility.yul\":2013:2047   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2027:2045   */\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2013:2047   */\n    tag_79:\n        /* \"#utility.yul\":2072:2073   */\n      dup3\n        /* \"#utility.yul\":2069:2070   */\n      dup3\n        /* \"#utility.yul\":2065:2074   */\n      sub\n        /* \"#utility.yul\":2057:2074   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2176   */\n    tag_53:\n        /* \"#utility.yul\":2120:2127   */\n      0x00\n        /* \"#utility.yul\":2163:2168   */\n      dup2\n        /* \"#utility.yul\":2156:2169   */\n      iszero\n        /* \"#utility.yul\":2149:2170   */\n      iszero\n        /* \"#utility.yul\":2138:2170   */\n      swap1\n      pop\n        /* \"#utility.yul\":2086:2176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2182:2308   */\n    tag_83:\n        /* \"#utility.yul\":2219:2226   */\n      0x00\n        /* \"#utility.yul\":2259:2301   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2252:2257   */\n      dup3\n        /* \"#utility.yul\":2248:2302   */\n      and\n        /* \"#utility.yul\":2237:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2182:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2391   */\n    tag_61:\n        /* \"#utility.yul\":2351:2358   */\n      0x00\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2369:2385   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2397:2540   */\n    tag_57:\n        /* \"#utility.yul\":2464:2473   */\n      0x00\n        /* \"#utility.yul\":2497:2534   */\n      tag_87\n        /* \"#utility.yul\":2528:2533   */\n      dup3\n        /* \"#utility.yul\":2497:2534   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2484:2534   */\n      swap1\n      pop\n        /* \"#utility.yul\":2397:2540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2546:2672   */\n    tag_88:\n        /* \"#utility.yul\":2596:2605   */\n      0x00\n        /* \"#utility.yul\":2629:2666   */\n      tag_90\n        /* \"#utility.yul\":2660:2665   */\n      dup3\n        /* \"#utility.yul\":2629:2666   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2616:2666   */\n      swap1\n      pop\n        /* \"#utility.yul\":2546:2672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2678:2791   */\n    tag_91:\n        /* \"#utility.yul\":2728:2737   */\n      0x00\n        /* \"#utility.yul\":2761:2785   */\n      tag_93\n        /* \"#utility.yul\":2779:2784   */\n      dup3\n        /* \"#utility.yul\":2761:2785   */\n      tag_83\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2748:2785   */\n      swap1\n      pop\n        /* \"#utility.yul\":2678:2791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:2977   */\n    tag_81:\n        /* \"#utility.yul\":2845:2922   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2842:2843   */\n      0x00\n        /* \"#utility.yul\":2835:2923   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x11\n        /* \"#utility.yul\":2939:2940   */\n      0x04\n        /* \"#utility.yul\":2932:2947   */\n      mstore\n        /* \"#utility.yul\":2966:2970   */\n      0x24\n        /* \"#utility.yul\":2963:2964   */\n      0x00\n        /* \"#utility.yul\":2956:2971   */\n      revert\n        /* \"#utility.yul\":2983:3163   */\n    tag_75:\n        /* \"#utility.yul\":3031:3108   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3028:3029   */\n      0x00\n        /* \"#utility.yul\":3021:3109   */\n      mstore\n        /* \"#utility.yul\":3128:3132   */\n      0x12\n        /* \"#utility.yul\":3125:3126   */\n      0x04\n        /* \"#utility.yul\":3118:3133   */\n      mstore\n        /* \"#utility.yul\":3152:3156   */\n      0x24\n        /* \"#utility.yul\":3149:3150   */\n      0x00\n        /* \"#utility.yul\":3142:3157   */\n      revert\n        /* \"#utility.yul\":3292:3409   */\n    tag_48:\n        /* \"#utility.yul\":3401:3402   */\n      0x00\n        /* \"#utility.yul\":3398:3399   */\n      dup1\n        /* \"#utility.yul\":3391:3403   */\n      revert\n        /* \"#utility.yul\":3415:3531   */\n    tag_44:\n        /* \"#utility.yul\":3485:3506   */\n      tag_100\n        /* \"#utility.yul\":3500:3505   */\n      dup2\n        /* \"#utility.yul\":3485:3506   */\n      tag_53\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3478:3483   */\n      dup2\n        /* \"#utility.yul\":3475:3507   */\n      eq\n        /* \"#utility.yul\":3465:3525   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":3521:3522   */\n      0x00\n        /* \"#utility.yul\":3518:3519   */\n      dup1\n        /* \"#utility.yul\":3511:3523   */\n      revert\n        /* \"#utility.yul\":3465:3525   */\n    tag_101:\n        /* \"#utility.yul\":3415:3531   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c6dc6c01eb27083b50de36c0ba1d50f9f01d65aa955baae70b1aa201d9532bfc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b507396e35b7e384d933450272f1c7b34a169b0763b1c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610437806100986000396000f3fe6080604052600436106100385760003560e01c80630e94ba8314610044578063473ca96c1461006f578063e6f334d7146100795761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100a4565b6040516100669190610280565b60405180910390f35b6100776100c8565b005b34801561008557600080fd5b5061008e6101c4565b60405161009b919061029b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006100de6001436101ca90919063ffffffff16565b4060001c905060006100fb600254836101e090919063ffffffff16565b905060006001821461010e576000610111565b60015b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b815260040161016c9190610265565b602060405180830381600087803b15801561018657600080fd5b505af115801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be919061020b565b50505050565b60015481565b600081836101d891906102e7565b905092915050565b600081836101ee91906102b6565b905092915050565b600081519050610205816103ea565b92915050565b600060208284031215610221576102206103e5565b5b600061022f848285016101f6565b91505092915050565b6102418161031b565b82525050565b61025081610351565b82525050565b61025f81610347565b82525050565b600060208201905061027a6000830184610238565b92915050565b60006020820190506102956000830184610247565b92915050565b60006020820190506102b06000830184610256565b92915050565b60006102c182610347565b91506102cc83610347565b9250826102dc576102db6103b6565b5b828204905092915050565b60006102f282610347565b91506102fd83610347565b9250828210156103105761030f610387565b5b828203905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061035c82610363565b9050919050565b600061036e82610375565b9050919050565b600061038082610327565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6103f38161031b565b81146103fe57600080fd5b5056fea2646970667358221220c6dc6c01eb27083b50de36c0ba1d50f9f01d65aa955baae70b1aa201d9532bfc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x96E35B7E384D933450272F1C7B34A169B0763B1C PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x437 DUP1 PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE94BA83 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x473CA96C EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x79 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE PUSH1 0x1 NUMBER PUSH2 0x1CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH2 0xFB PUSH1 0x2 SLOAD DUP4 PUSH2 0x1E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x10E JUMPI PUSH1 0x0 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x2B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x205 DUP2 PUSH2 0x3EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x3E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F DUP5 DUP3 DUP6 ADD PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x241 DUP2 PUSH2 0x31B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x250 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x25F DUP2 PUSH2 0x347 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x238 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x295 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x247 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1 DUP3 PUSH2 0x347 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC DUP4 PUSH2 0x347 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 DUP3 PUSH2 0x347 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD DUP4 PUSH2 0x347 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x310 JUMPI PUSH2 0x30F PUSH2 0x387 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C DUP3 PUSH2 0x363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP3 PUSH2 0x375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x380 DUP3 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F3 DUP2 PUSH2 0x31B JUMP JUMPDEST DUP2 EQ PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xDC PUSH13 0x1EB27083B50DE36C0BA1D50F9 CREATE SAR PUSH6 0xAA955BAAE70B BYTE LOG2 ADD 0xD9 MSTORE8 0x2B 0xFC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "171:643:1:-:0;;;316:77;299:94;;402:95;;;;;;;;;;446:42;426:7;;:63;;;;;;;;;;;;;;;;;;171:643;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consecutiveWins_330": {
									"entryPoint": 452,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_220": {
									"entryPoint": 480,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_190": {
									"entryPoint": 458,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@surface_325": {
									"entryPoint": 164,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@win_382": {
									"entryPoint": 200,
									"id": 382,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICoinFlip_$322_to_t_address_fromStack": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICoinFlip_$322__to_t_address__fromStack_reversed": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ICoinFlip_$322_to_t_address": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3534:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "272:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:2"
															},
															"nodeType": "YulIf",
															"src": "234:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "363:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "378:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "392:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "382:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "407:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "450:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "461:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "446:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "446:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "470:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "417:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "417:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "407:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:2",
														"type": ""
													}
												],
												"src": "150:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "560:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "597:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "582:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "570:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "548:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "555:3:2",
														"type": ""
													}
												],
												"src": "501:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:83:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "715:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "768:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICoinFlip_$322_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "720:47:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:54:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:67:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICoinFlip_$322_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "686:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "693:3:2",
														"type": ""
													}
												],
												"src": "616:165:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "852:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "869:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "892:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "874:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "874:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "862:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "840:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "847:3:2",
														"type": ""
													}
												],
												"src": "787:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1003:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1013:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1025:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1036:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1013:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1087:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1100:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1111:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1096:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1049:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1049:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "975:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "987:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "998:4:2",
														"type": ""
													}
												],
												"src": "911:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1242:141:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1252:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1264:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1260:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1349:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1362:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICoinFlip_$322_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1288:60:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1288:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1288:88:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICoinFlip_$322__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1214:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1226:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1237:4:2",
														"type": ""
													}
												],
												"src": "1127:256:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1487:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1497:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1509:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1520:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1505:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1505:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1497:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1577:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1590:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1601:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1586:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1586:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1533:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1459:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1471:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1482:4:2",
														"type": ""
													}
												],
												"src": "1389:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1657:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1667:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1683:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1677:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1650:6:2",
														"type": ""
													}
												],
												"src": "1617:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1740:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1750:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1773:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1755:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1755:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1750:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1784:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1807:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1789:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1784:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1831:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1833:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1833:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1833:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1828:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:9:2"
															},
															"nodeType": "YulIf",
															"src": "1818:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1863:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1872:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1875:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1868:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1863:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1729:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1732:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1738:1:2",
														"type": ""
													}
												],
												"src": "1698:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1934:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1944:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1967:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1949:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1944:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1978:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2001:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1983:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1978:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2025:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2027:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2019:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2022:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:8:2"
															},
															"nodeType": "YulIf",
															"src": "2013:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2057:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2072:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2065:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2057:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1920:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1923:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1929:4:2",
														"type": ""
													}
												],
												"src": "1889:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2128:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2138:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2163:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2156:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2138:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2110:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2120:7:2",
														"type": ""
													}
												],
												"src": "2086:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2237:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2252:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2248:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2237:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2209:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2219:7:2",
														"type": ""
													}
												],
												"src": "2182:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2359:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2369:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2380:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2369:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2341:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2351:7:2",
														"type": ""
													}
												],
												"src": "2314:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2474:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2484:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2528:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2497:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2497:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2484:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICoinFlip_$322_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2454:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2464:9:2",
														"type": ""
													}
												],
												"src": "2397:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2616:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2660:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2629:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2616:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2586:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2596:9:2",
														"type": ""
													}
												],
												"src": "2546:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2748:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2718:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2728:9:2",
														"type": ""
													}
												],
												"src": "2678:113:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2825:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2842:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2835:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2835:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2939:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2942:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2932:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2963:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2966:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2956:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2956:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2797:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3011:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3028:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3021:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3021:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3125:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3118:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3118:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3118:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3149:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3152:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3142:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2983:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3258:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3275:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3278:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3268:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3268:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3268:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3169:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3381:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3391:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3391:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3292:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3455:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3509:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3518:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3521:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3511:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3511:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3511:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3478:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3500:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3485:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3485:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3475:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:40:2"
															},
															"nodeType": "YulIf",
															"src": "3465:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3448:5:2",
														"type": ""
													}
												],
												"src": "3415:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_ICoinFlip_$322_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICoinFlip_$322_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ICoinFlip_$322__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICoinFlip_$322_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ICoinFlip_$322_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c80630e94ba8314610044578063473ca96c1461006f578063e6f334d7146100795761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100a4565b6040516100669190610280565b60405180910390f35b6100776100c8565b005b34801561008557600080fd5b5061008e6101c4565b60405161009b919061029b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006100de6001436101ca90919063ffffffff16565b4060001c905060006100fb600254836101e090919063ffffffff16565b905060006001821461010e576000610111565b60015b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b815260040161016c9190610265565b602060405180830381600087803b15801561018657600080fd5b505af115801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be919061020b565b50505050565b60015481565b600081836101d891906102e7565b905092915050565b600081836101ee91906102b6565b905092915050565b600081519050610205816103ea565b92915050565b600060208284031215610221576102206103e5565b5b600061022f848285016101f6565b91505092915050565b6102418161031b565b82525050565b61025081610351565b82525050565b61025f81610347565b82525050565b600060208201905061027a6000830184610238565b92915050565b60006020820190506102956000830184610247565b92915050565b60006020820190506102b06000830184610256565b92915050565b60006102c182610347565b91506102cc83610347565b9250826102dc576102db6103b6565b5b828204905092915050565b60006102f282610347565b91506102fd83610347565b9250828210156103105761030f610387565b5b828203905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061035c82610363565b9050919050565b600061036e82610375565b9050919050565b600061038082610327565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6103f38161031b565b81146103fe57600080fd5b5056fea2646970667358221220c6dc6c01eb27083b50de36c0ba1d50f9f01d65aa955baae70b1aa201d9532bfc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE94BA83 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x473CA96C EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x79 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE PUSH1 0x1 NUMBER PUSH2 0x1CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH2 0xFB PUSH1 0x2 SLOAD DUP4 PUSH2 0x1E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x10E JUMPI PUSH1 0x0 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x2B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x205 DUP2 PUSH2 0x3EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x3E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F DUP5 DUP3 DUP6 ADD PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x241 DUP2 PUSH2 0x31B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x250 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x25F DUP2 PUSH2 0x347 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x238 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x295 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x247 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1 DUP3 PUSH2 0x347 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC DUP4 PUSH2 0x347 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 DUP3 PUSH2 0x347 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD DUP4 PUSH2 0x347 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x310 JUMPI PUSH2 0x30F PUSH2 0x387 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C DUP3 PUSH2 0x363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP3 PUSH2 0x375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x380 DUP3 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F3 DUP2 PUSH2 0x31B JUMP JUMPDEST DUP2 EQ PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xDC PUSH13 0x1EB27083B50DE36C0BA1D50F9 CREATE SAR PUSH6 0xAA955BAAE70B BYTE LOG2 ADD 0xD9 MSTORE8 0x2B 0xFC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "171:643:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;507:257;;;:::i;:::-;;262:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;196:24;;;;;;;;;;;;:::o;507:257::-;550:18;589:19;606:1;589:12;:16;;:19;;;;:::i;:::-;579:30;571:39;;550:60;;633:16;652:22;667:6;;652:10;:14;;:22;;;;:::i;:::-;633:41;;685:9;709:1;697:8;:13;:28;;720:5;697:28;;;713:4;697:28;685:40;;738:7;;;;;;;;;;:12;;;751:4;738:18;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;539:225;;;507:257::o;262:30::-;;;;:::o;3108:96:0:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:345::-;217:6;266:2;254:9;245:7;241:23;237:32;234:119;;;272:79;;:::i;:::-;234:119;392:1;417:61;470:7;461:6;450:9;446:22;417:61;:::i;:::-;407:71;;363:125;150:345;;;;:::o;501:109::-;582:21;597:5;582:21;:::i;:::-;577:3;570:34;501:109;;:::o;616:165::-;720:54;768:5;720:54;:::i;:::-;715:3;708:67;616:165;;:::o;787:118::-;874:24;892:5;874:24;:::i;:::-;869:3;862:37;787:118;;:::o;911:210::-;998:4;1036:2;1025:9;1021:18;1013:26;;1049:65;1111:1;1100:9;1096:17;1087:6;1049:65;:::i;:::-;911:210;;;;:::o;1127:256::-;1237:4;1275:2;1264:9;1260:18;1252:26;;1288:88;1373:1;1362:9;1358:17;1349:6;1288:88;:::i;:::-;1127:256;;;;:::o;1389:222::-;1482:4;1520:2;1509:9;1505:18;1497:26;;1533:71;1601:1;1590:9;1586:17;1577:6;1533:71;:::i;:::-;1389:222;;;;:::o;1698:185::-;1738:1;1755:20;1773:1;1755:20;:::i;:::-;1750:25;;1789:20;1807:1;1789:20;:::i;:::-;1784:25;;1828:1;1818:35;;1833:18;;:::i;:::-;1818:35;1875:1;1872;1868:9;1863:14;;1698:185;;;;:::o;1889:191::-;1929:4;1949:20;1967:1;1949:20;:::i;:::-;1944:25;;1983:20;2001:1;1983:20;:::i;:::-;1978:25;;2022:1;2019;2016:8;2013:34;;;2027:18;;:::i;:::-;2013:34;2072:1;2069;2065:9;2057:17;;1889:191;;;;:::o;2086:90::-;2120:7;2163:5;2156:13;2149:21;2138:32;;2086:90;;;:::o;2182:126::-;2219:7;2259:42;2252:5;2248:54;2237:65;;2182:126;;;:::o;2314:77::-;2351:7;2380:5;2369:16;;2314:77;;;:::o;2397:143::-;2464:9;2497:37;2528:5;2497:37;:::i;:::-;2484:50;;2397:143;;;:::o;2546:126::-;2596:9;2629:37;2660:5;2629:37;:::i;:::-;2616:50;;2546:126;;;:::o;2678:113::-;2728:9;2761:24;2779:5;2761:24;:::i;:::-;2748:37;;2678:113;;;:::o;2797:180::-;2845:77;2842:1;2835:88;2942:4;2939:1;2932:15;2966:4;2963:1;2956:15;2983:180;3031:77;3028:1;3021:88;3128:4;3125:1;3118:15;3152:4;3149:1;3142:15;3292:117;3401:1;3398;3391:12;3415:116;3485:21;3500:5;3485:21;:::i;:::-;3478:5;3475:32;3465:60;;3521:1;3518;3511:12;3465:60;3415:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "215800",
								"executionCost": "46630",
								"totalCost": "262430"
							},
							"external": {
								"consecutiveWins()": "2451",
								"surface()": "2575",
								"win()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 814,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 171,
									"end": 814,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 814,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 316,
									"end": 393,
									"name": "PUSH",
									"source": 1,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 393,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 299,
									"end": 393,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 402,
									"end": 497,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 402,
									"end": 497,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 402,
									"end": 497,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 402,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 497,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 402,
									"end": 497,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 497,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 402,
									"end": 497,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 402,
									"end": 497,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 497,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 402,
									"end": 497,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 446,
									"end": 488,
									"name": "PUSH",
									"source": 1,
									"value": "96E35B7E384D933450272F1C7B34A169B0763B1C"
								},
								{
									"begin": 426,
									"end": 433,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 433,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 426,
									"end": 489,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 426,
									"end": 489,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 426,
									"end": 489,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 426,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 171,
									"end": 814,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 814,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 814,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 814,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 814,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 171,
									"end": 814,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 814,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6dc6c01eb27083b50de36c0ba1d50f9f01d65aa955baae70b1aa201d9532bfc64736f6c63430008070033",
									".code": [
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "E94BA83"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "473CA96C"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "E6F334D7"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 507,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 507,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 507,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 764,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 196,
											"end": 220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 220,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 507,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 606,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 589,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 589,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 589,
											"end": 608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 589,
											"end": 608,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 589,
											"end": 608,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 589,
											"end": 608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 579,
											"end": 609,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 571,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 610,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 550,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 550,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 667,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 667,
											"end": 673,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 652,
											"end": 662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 652,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 652,
											"end": 666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 652,
											"end": 674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 652,
											"end": 674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 652,
											"end": 674,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 652,
											"end": 674,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 652,
											"end": 674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 652,
											"end": 674,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 652,
											"end": 674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 633,
											"end": 674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 697,
											"end": 705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 697,
											"end": 710,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 697,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 685,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 685,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 745,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 738,
											"end": 745,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 745,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 738,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 738,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 738,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 751,
											"end": 755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 507,
											"end": 764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 292,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 292,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 150,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 217,
											"end": 223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 245,
											"end": 252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 241,
											"end": 264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 269,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 234,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 272,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 234,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 470,
											"end": 477,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 461,
											"end": 467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 450,
											"end": 459,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 446,
											"end": 468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 417,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 407,
											"end": 478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 407,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 610,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 501,
											"end": 610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 582,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 597,
											"end": 602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 582,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 582,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 582,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 570,
											"end": 604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 501,
											"end": 610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 610,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 781,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 616,
											"end": 781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 720,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 720,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 720,
											"end": 774,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 720,
											"end": 774,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 720,
											"end": 774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 715,
											"end": 718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 708,
											"end": 775,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 781,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 787,
											"end": 905,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 787,
											"end": 905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 874,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 874,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 874,
											"end": 898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 874,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 872,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 862,
											"end": 899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 787,
											"end": 905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 905,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1109,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1127,
											"end": 1383,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1127,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1277,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1288,
											"end": 1376,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1288,
											"end": 1376,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1288,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1383,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1383,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1383,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1389,
											"end": 1611,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1389,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1533,
											"end": 1604,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1604,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1533,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1611,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1611,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1698,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1698,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1773,
											"end": 1774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1755,
											"end": 1775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1775,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1755,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1789,
											"end": 1809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1809,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1789,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1809,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1818,
											"end": 1853,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1853,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1818,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1873,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1883,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1883,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1889,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1949,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2001,
											"end": 2002,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2024,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2047,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2013,
											"end": 2047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2047,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2013,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2080,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2169,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2170,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2182,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2182,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2302,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2302,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2308,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2314,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2391,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2397,
											"end": 2540,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2397,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2497,
											"end": 2534,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2497,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2497,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2540,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2546,
											"end": 2672,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2546,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2660,
											"end": 2665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2629,
											"end": 2666,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2629,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2629,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2672,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2678,
											"end": 2791,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2678,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2791,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2797,
											"end": 2977,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2797,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2922,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2842,
											"end": 2843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2970,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2963,
											"end": 2964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2971,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3163,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2983,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3031,
											"end": 3108,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3028,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3132,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3118,
											"end": 3133,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3156,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3149,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3157,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3401,
											"end": 3402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3415,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3500,
											"end": 3505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3507,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3465,
											"end": 3525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3511,
											"end": 3523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3525,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3465,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3531,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"surface()": "0e94ba83",
							"win()": "473ca96c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"surface\",\"outputs\":[{\"internalType\":\"contract ICoinFlip\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"win\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/level3.sol\":\"level3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/level3.sol\":{\"keccak256\":\"0x2a60c70d8799426e9d897a85e108927551b4494a22871ea9cde2577840e55e3b\",\"urls\":[\"bzz-raw://bb242c49c4f1c5af8e5f946bae03712f93f92847513d0efac4c081216003227a\",\"dweb:/ipfs/Qmasx7TnyeovLt2MSzFUyJu9LLpTSH3AeKc5jLBn6ZD3RE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/level3.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/level3.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/level3.sol": {
				"ast": {
					"absolutePath": "contracts/level3.sol",
					"exportedSymbols": {
						"ICoinFlip": [
							322
						],
						"SafeMath": [
							311
						],
						"level3": [
							387
						]
					},
					"id": 388,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 388,
							"sourceUnit": 312,
							"src": "26:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 322,
							"linearizedBaseContracts": [
								322
							],
							"name": "ICoinFlip",
							"nameLocation": "97:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1d263f67",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "122:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "132:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "127:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "127:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:13:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "158:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "158:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:6:1"
									},
									"scope": 322,
									"src": "113:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 388,
							"src": "87:80:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 387,
							"linearizedBaseContracts": [
								387
							],
							"name": "level3",
							"nameLocation": "180:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0e94ba83",
									"id": 325,
									"mutability": "mutable",
									"name": "surface",
									"nameLocation": "213:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "196:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICoinFlip_$322",
										"typeString": "contract ICoinFlip"
									},
									"typeName": {
										"id": 324,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 323,
											"name": "ICoinFlip",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 322,
											"src": "196:9:1"
										},
										"referencedDeclaration": 322,
										"src": "196:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICoinFlip_$322",
											"typeString": "contract ICoinFlip"
										}
									},
									"visibility": "public"
								},
								{
									"id": 328,
									"libraryName": {
										"id": 326,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "235:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "229:27:1",
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 330,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "277:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "262:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "262:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 333,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "307:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "299:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "299:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:77:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "415:82:1",
										"statements": [
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 336,
														"name": "surface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "426:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICoinFlip_$322",
															"typeString": "contract ICoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307839364533354237653338344439333334353032373246314337623334613136394230373633623143",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "446:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x96E35B7e384D933450272F1C7b34a169B0763b1C"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 337,
															"name": "ICoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "436:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICoinFlip_$322_$",
																"typeString": "type(contract ICoinFlip)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "436:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICoinFlip_$322",
															"typeString": "contract ICoinFlip"
														}
													},
													"src": "426:63:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICoinFlip_$322",
														"typeString": "contract ICoinFlip"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "426:63:1"
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:1"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:0:1"
									},
									"scope": 387,
									"src": "402:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "539:225:1",
										"statements": [
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "558:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "550:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "550:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "606:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 351,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "589:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "589:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "589:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "589:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 350,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "579:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "579:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "571:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "571:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "571:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "550:60:1"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "641:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "633:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "633:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"arguments": [
														{
															"id": 363,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "667:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 361,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "652:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "652:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "652:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "633:41:1"
											},
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "690:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "685:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 366,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "685:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 368,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "697:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "709:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "697:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "720:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "697:28:1",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "713:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "685:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "751:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 375,
															"name": "surface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "738:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICoinFlip_$322",
																"typeString": "contract ICoinFlip"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "738:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "738:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "738:18:1"
											}
										]
									},
									"functionSelector": "473ca96c",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "win",
									"nameLocation": "516:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "519:2:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:0:1"
									},
									"scope": 387,
									"src": "507:257:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "799:2:1",
										"statements": []
									},
									"id": 386,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:1"
									},
									"scope": 387,
									"src": "772:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 388,
							"src": "171:643:1",
							"usedErrors": []
						}
					],
					"src": "0:816:1"
				},
				"id": 1
			}
		}
	}
}